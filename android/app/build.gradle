apply plugin: 'com.android.application'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def versionProperties = new Properties()

versionProperties['versionCode'] = "1"
versionProperties['versionName'] = "0.1.0"

if (project.hasProperty('versionName')) {
    versionProperties['versionName'] = project.versionName
}

if (project.hasProperty('versionCode')) {
    versionProperties['versionCode'] = project.versionCode
}

android {
    compileSdkVersion 27
    buildToolsVersion '26.0.2'
    publishNonDefault true

    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
        debugSign {
            keyAlias 'debugSign'
            keyPassword 'debugSign'
            storePassword 'debugSign'
            storeFile file('debugSign.jks')
        }
    }

    defaultConfig {
        applicationId "com.popsongremix.laidoff"
        minSdkVersion 15
        targetSdkVersion 27

        versionCode versionProperties['versionCode'] as int
        versionName versionProperties['versionName']

        ndk {
            abiFilters 'armeabi-v7a', 'x86'//,'x86_64'//, 'armeabi', 'armeabi-v7a', 'arm64-v8a'
        }

        externalNativeBuild {
            if (keystoreProperties.hasProperty('autoBuild')) {
                cmake {
                    arguments '-DANDROID_PLATFORM=android-19',
                            '-DANDROID_TOOLCHAIN=clang',
                            '-DLW_AUTO_BUILD=1'
                }
            } else {
                cmake {
                    arguments '-DANDROID_PLATFORM=android-19',
                            '-DANDROID_TOOLCHAIN=clang'
                }
            }

        }

        signingConfig signingConfigs.config
    }

    buildTypes {
        debug {
            debuggable true
            jniDebuggable true
            signingConfig signingConfigs.debugSign
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path 'src/main/cpp/CMakeLists.txt'
        }
    }

    sourceSets {
        //main.java.srcDirs += 'src/main/../../../..'

        //main.assets.srcDirs += '../../assets'
    }

    aaptOptions {
        noCompress 'vbo', 'png', 'tga', 'fnt', 'txt', 'pvr', 'pkm', 'ktx', 'glsl', 'lua', 'svbo', 'arm', 'act', 'field', 'nav', 'ogg'
    }
}

configurations {
    // Expose the debug version of the library to other modules
    debug
    release
}

repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
    google()
}

dependencies {
    implementation 'com.google.firebase:firebase-messaging:11.8.0'
    implementation 'com.google.firebase:firebase-ads:11.8.0'
    implementation 'com.google.firebase:firebase-auth:11.8.0'
    implementation 'com.google.android.gms:play-services-auth:11.8.0'
    implementation 'com.google.android.gms:play-services-games:11.8.0'
    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
}

apply plugin: 'com.google.gms.google-services'
